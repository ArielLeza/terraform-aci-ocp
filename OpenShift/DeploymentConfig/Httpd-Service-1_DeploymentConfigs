kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: 'true'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/ebc-cloud-prod/deploymentconfigs/httpd-example
  resourceVersion: '30726511'
  name: httpd-example
  uid: fb2840ed-7319-4fc4-acce-8bac4cc818d8
  creationTimestamp: '2021-04-13T10:28:36Z'
  generation: 7
  managedFields:
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2021-04-26T10:08:11Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:description': {}
            'f:template.alpha.openshift.io/wait-for-ready': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:template': {}
            'f:template.openshift.io/template-instance-owner': {}
        'f:spec':
          'f:replicas': {}
          'f:selector':
            .: {}
            'f:name': {}
          'f:strategy':
            'f:activeDeadlineSeconds': {}
            'f:rollingParams':
              .: {}
              'f:intervalSeconds': {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
              'f:timeoutSeconds': {}
              'f:updatePeriodSeconds': {}
            'f:type': {}
          'f:template':
            .: {}
            'f:metadata':
              .: {}
              'f:creationTimestamp': {}
              'f:labels':
                .: {}
                'f:name': {}
              'f:name': {}
            'f:spec':
              .: {}
              'f:containers':
                .: {}
                'k:{"name":"httpd-example"}':
                  'f:image': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:memory': {}
                  'f:livenessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
          'f:triggers': {}
        'f:status':
          'f:updatedReplicas': {}
          'f:readyReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:details':
            .: {}
            'f:causes': {}
            'f:message': {}
          'f:replicas': {}
          'f:availableReplicas': {}
          'f:observedGeneration': {}
          'f:unavailableReplicas': {}
          'f:latestVersion': {}
  namespace: ebc-cloud-prod
  labels:
    app: httpd-example
    template: httpd-example
    template.openshift.io/template-instance-owner: de2e5a3b-2b83-49cc-91c5-bb1bc06fc182
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - httpd-example
        from:
          kind: ImageStreamTag
          namespace: ebc-cloud-prod
          name: 'httpd-example:latest'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/ebc-cloud-prod/httpd-example@sha256:d9a2ad01ebe98ccd2f3d48f9a956a3e597ca92cff9efe20c945f59735b62775a
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: httpd-example
  template:
    metadata:
      name: httpd-example
      creationTimestamp: null
      labels:
        name: httpd-example
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: httpd-example
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/ebc-cloud-prod/httpd-example@sha256:d9a2ad01ebe98ccd2f3d48f9a956a3e597ca92cff9efe20c945f59735b62775a
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  observedGeneration: 7
  details:
    message: manual change
    causes:
      - type: Manual
  availableReplicas: 1
  unavailableReplicas: 0
  latestVersion: 6
  updatedReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2021-04-13T13:09:52Z'
      lastTransitionTime: '2021-04-13T13:09:50Z'
      reason: NewReplicationControllerAvailable
      message: replication controller "httpd-example-6" successfully rolled out
    - type: Available
      status: 'True'
      lastUpdateTime: '2021-04-26T10:08:11Z'
      lastTransitionTime: '2021-04-26T10:08:11Z'
      message: Deployment config has minimum availability.
  replicas: 1
  readyReplicas: 1
